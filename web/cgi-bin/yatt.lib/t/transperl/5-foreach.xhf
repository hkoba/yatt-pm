# -*- coding: utf-8 -*-

TITLE: foreach
IN:
 <!yatt:args x=list>
 <ul>
 <yatt:foreach my=i "&yatt:x:expand();"><li>&yatt:i;</li>
 </yatt:foreach></ul>
PARAM[
[
- 1
- 2
- 3
]
]
OUT:
 <ul>
 <li>1</li>
 <li>2</li>
 <li>3</li>
 </ul>

TITLE: block, Can have same name vars.
IN:
 <yatt:block><?perl my $var?></yatt:block>
 <yatt:block><?perl my $var?></yatt:block>
 ok
OUT:
 
 
 ok

TITLE: block, Can isolate vars (static)
IN:
 <yatt:block>
   <yatt:my x />
 </yatt:block>
 &yatt:x;
ERROR: ^No such variable 'x' \(.*\)

TITLE: my html
BREAK: 1
IN:
 <yatt:my x><h2>foo</h2></yatt:my>
 <b>&yatt:x;</b>
OUT:
 
 <b><h2>foo</h2></b>

TITLE: my text
IN:
 <!yatt:args x y>
 <yatt:my foo=&yatt:x; bar=&yatt:y;/>
 &yatt:foo; &yatt:bar;
PARAM[
- <h2>foo</h2>
- &bar
]
OUT:
 
 &lt;h2&gt;foo&lt;/h2&gt; &amp;bar


FILE: doc/envelope.html
IN:
 <!yatt:args %yatt:no_last_newline;>
 <div><yatt:body/></div>

TITLE: my should not corrupt outer scope.
IN:
 <yatt:envelope>
 <yatt:my x="foo"/>
 <yatt:wrap />
 </yatt:envelope>
 
 <!yatt:widget wrap>
 <yatt:envelope>
 <yatt:my x="bar"/>
 &yatt:x;
 </yatt:envelope>
OUT:
 <div>
 <div>
 bar
 </div>
 
 </div>
